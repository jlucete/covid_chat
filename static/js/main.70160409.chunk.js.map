{"version":3,"sources":["Chat1D.js","Chat2D.js","Blackboard.js","ChatThread.js","Content.js","Clock.js","App.js","index.js"],"names":["Chat1D","chatHistory","this","props","chatList","map","chat","i","key","className","onClick","chatThreadHandleClick","writer","time","chatValue","style","float","clear","ref","el","scrollToBottom","Component","Chat2D","popups","popupStyle","Blackboard","state","notice","inputBoxDisplay","buttonValue","setState","e","newValue","target","value","inputBoxStyle","display","blackboardDoSubmit","onChange","blackboardDoChange","ChatThread","chatTopic","Content","videoID","playerStyle","nextProps","nextState","videoId","playbackState","configuration","showinfo","controls","origin","Clock","Change","d","Date","timeID","setInterval","clearInterval","n","currentDate","date","getFullYear","getMonth","getDate","getDay","amPm","currentHours","addZeros","getHours","currentMinute","getMinutes","currentSeconds","getSeconds","color","App","chatThreadValue","chatThreadIndex","chatThreadList","chat2DList","chat1DList","remove","scrollIndex","isBreakTime","commandValue","classTitle","isPlayerRendered","userName","isLogin","readData","window","alert","substring","match","today","sec","min","hr","newItem","slice","length","empty","concat","left","Math","random","top","width","newList","setTimeout","prevState","preventDefault","flag","newChat1DList","newThreadChat","someRef","scrollIntoView","behavior","handleReadData","onSubmit","commandDoSubmit","type","commandDoChange","placeholder","chat1DdoSubmit","chat1DdoChange","chatThreadDoSubmit","chatThreadDoChange","loginDoSubmit","loginDoChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70160409.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Chat1D.css';\r\n\r\nclass Chat1D extends Component {\r\n  render() {\r\n    const chatList = this.props.chatList;\r\n    const chatHistory = chatList.map(\r\n      (chat, i) => (\r\n        <div key = {i} className=\"Chat1D-single\" onClick={()=>(this.props.chatThreadHandleClick(\"o\",i))}>\r\n          <span className=\"Chat1D-single-writer\">{chat.writer}</span>\r\n          <span className=\"Chat1D-single-time\">{chat.time}</span>\r\n          <div className=\"Chat1D-single-chatValue\">{chat.chatValue}</div>\r\n        </div>\r\n      )\r\n    );\r\n    return (\r\n      <div className=\"Chat1D-layout\">\r\n        <div className=\"Chat1D-title\">1D 채팅방</div>\r\n        <div className=\"Chat1D-container\">\r\n          <div className=\"Chat1D-chatList\">\r\n            {chatHistory}\r\n          </div>\r\n          <div style={{ float:\"left\", clear:\"both\"}}\r\n               ref={(el) => { this.props.scrollToBottom(\"o\", el);}}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chat1D;","import React, { Component } from 'react';\r\nimport './Chat2D.css';\r\n\r\n\r\nclass Chat2D extends Component {\r\n\r\n  render() {\r\n    const chatList = this.props.chatList;\r\n    const popups = chatList.map(\r\n      (chat, i) => (\r\n        <div className=\"Chat2D-popup\" key = {i} style={chat.popupStyle}>\r\n          <div className=\"Chat2D-popup-writer\">{chat.writer}</div>\r\n          <div className=\"Chat2D-popup-chatValue\">{chat.chatValue}</div>\r\n        </div>\r\n      )\r\n    );\r\n    return (\r\n      <div>\r\n        {popups}\r\n        <div className=\"Chat2D-layout\">\r\n          <div className=\"Chat2D-title\">2D채팅방</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chat2D;","import React, { Component } from 'react';\r\nimport './Blackboard.css';\r\n\r\nclass Blackboard extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      notice : \"\",\r\n      inputBoxDisplay: \"none\",\r\n      buttonValue: \"수정\",\r\n    };\r\n  }\r\n  blackboardDoFix() {\r\n    this.setState({\r\n      inputBoxDisplay: \"block\",\r\n    });\r\n  }\r\n  blackboardDoSubmit() {\r\n    if(this.state.buttonValue === \"적용\"){\r\n      this.setState({\r\n        inputBoxDisplay: \"none\",\r\n        buttonValue: \"수정\",\r\n      })\r\n    }\r\n    else{\r\n      this.setState({\r\n        inputBoxDisplay: \"block\",\r\n        buttonValue: \"적용\",\r\n      })\r\n    }\r\n  }\r\n  blackboardDoChange (e) {\r\n    const newValue = e.target.value;\r\n    this.setState({notice: newValue});\r\n  }\r\n  render() {\r\n    const blackboardDoChange = (e) => this.blackboardDoChange(e);\r\n    const inputBoxStyle = {\r\n      display: this.state.inputBoxDisplay,\r\n    }\r\n    return (\r\n      <div className=\"Blackboard-layout\">\r\n        <div className=\"Blackboard-title\" >공지사항</div>\r\n        <button className=\"Blackboard-updateButton\" onClick={()=>(this.blackboardDoSubmit())}>{this.state.buttonValue}</button>\r\n        <pre className=\"Blackboard-notice\">{this.state.notice}</pre>\r\n        <textarea\r\n            className=\"Blackboard-inputBox\" \r\n            value={this.state.notice}\r\n            onChange={blackboardDoChange}\r\n            style={inputBoxStyle}\r\n            />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Blackboard;","import React, { Component } from 'react';\r\nimport './ChatThread.css';\r\n\r\nclass ChatThread extends Component {\r\n  render() {\r\n    const chatList = this.props.chatList;\r\n    const chatTopic = (this.props.chatTopic ? \r\n                      <div className=\"ChatThread-topic\">\r\n                          <span className=\"Chat1D-single-writer\">{this.props.chatTopic.writer}</span>\r\n                          <span className=\"Chat1D-single-time\">{this.props.chatTopic.time}</span>\r\n                          <div className=\"Chat1D-single-chatValue\">{this.props.chatTopic.chatValue}</div>\r\n                      </div> :\r\n                      <div></div>);\r\n    const chatHistory = chatList.map(\r\n      (chat, i) => (\r\n        <div key = {i} className=\"ChatThread-single\" >\r\n          <span className=\"Chat1D-single-writer\">{chat.writer}</span>\r\n          <span className=\"Chat1D-single-time\">{chat.time}</span>\r\n          <div className=\"Chat1D-single-chatValue\">{chat.chatValue}</div>\r\n        </div>\r\n      )\r\n    );\r\n    return (\r\n      <div className=\"ChatThread-layout\">\r\n        {chatTopic}\r\n        <div className=\"ChatThread-container\">\r\n          <div className=\"ChatThread-chatList\">\r\n            {chatHistory}\r\n          </div>\r\n          <div style={{ float:\"left\", clear:\"both\"}}\r\n               ref={(el) => { this.props.scrollToBottom(\"t\", el);}}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChatThread;","import React, { Component } from 'react';\r\nimport YoutubePlayer from 'react-youtube-player';\r\nimport './Content.css';\r\n\r\n\r\nclass Content extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      videoID: \"\",\r\n      playerStyle: {\r\n        display: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.props.videoID === nextProps.videoID) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Content-layout\">\r\n        <div className =\"Content-player\" style={this.props.playerStyle}>\r\n          <YoutubePlayer\r\n            videoId={this.props.videoID}\r\n            playbackState='playing'\r\n            configuration={\r\n                {\r\n                    showinfo: 0,\r\n                    controls: 1,\r\n                    origin: 'http://localhost:3000',\r\n                }\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Content;","import React, { Component } from 'react';\r\nimport './Clock.css';\r\n\r\n\r\nclass Clock extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {d: new Date()}\r\n    }\r\n    componentDidMount() {\r\n        this.timeID = setInterval(\r\n            () => this.Change(),\r\n            1000\r\n        )\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.timeID)\r\n    }\r\n    Change = () => {\r\n        this.setState({\r\n            d : new Date(),\r\n        })\r\n    }\r\n\r\n    addZeros(n) {\r\n      if(n < 10) {\r\n        return \"0\"+n;\r\n      }\r\n      return n;\r\n    }\r\n    render() {\r\n      const currentDate = this.state.d;\r\n      const week = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"];\r\n      var date = currentDate.getFullYear()+'/'+currentDate.getMonth()+'/'+currentDate.getDate()+\" \"+week[currentDate.getDay()];\r\n      var amPm = ' AM'; // 초기값 AM\r\n      var currentHours = this.addZeros(currentDate.getHours()); \r\n      var currentMinute = this.addZeros(currentDate.getMinutes());\r\n      var currentSeconds = this.addZeros(currentDate.getSeconds());\r\n      \r\n      if(currentHours >= 12){ // 시간이 12보다 클 때 PM으로 세팅, 12를 빼줌\r\n        amPm = ' PM';\r\n        currentHours = this.addZeros(currentHours - 12);\r\n      }\r\n  \r\n      if(currentSeconds >= 50){// 50초 이상일 때 색을 변환해 준다.\r\n         currentSeconds = <span color=\"#de1951\">{currentSeconds}</span>;\r\n      }\r\n      return(\r\n          <div className =\"Clock-layout\">\r\n            <div className=\"Clock-date\">{date}</div>\r\n            <span className=\"Clock-time\">\r\n              {currentHours}:{currentMinute}:{currentSeconds}\r\n              <span className=\"Clock-ampm\">{amPm}</span>\r\n            </span>\r\n            \r\n\r\n          </div>)\r\n    }\r\n}\r\n\r\nexport default Clock;","import React, { Component } from 'react';\nimport './App.css';\nimport Chat1D from './Chat1D'\nimport Chat2D from './Chat2D'\nimport Blackboard from './Blackboard'\nimport ChatThread from './ChatThread'\nimport Content from './Content'\nimport Clock from './Clock'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatValue: \"\",\n      chatThreadValue: \"\",\n      chatThreadIndex: null,\n      chatThreadList: [],\n      chat2DList: [],\n      chat1DList: [],\n      remove: 0,\n      scrollIndex: \"o\",\n      isBreakTime: false,\n      commandValue: \"\",\n      videoID: \"hF_lIqruUeQ\",\n      playerStyle: {display: \"block\"},\n      classTitle: \"1학년 1반\",\n      isPlayerRendered: false,\n      userName: \"\",\n      isLogin: false,\n    };\n  }\n\n  handleReadData(readData) {\n    if(readData === \"break\") {\n      window.alert(\"쉬는시간입니다\");\n      this.setState({\n        classTitle: \"쉬는 쉬간\",\n        isBreakTime: true,\n      });\n    }\n    else if (readData === \"!break\"){\n      window.alert(\"수업시간입니다\");\n      this.setState({\n        classTitle: \"수학\",\n        isBreakTime: false,\n      });\n    }\n    else if(readData.substring(0,4) === \"http\"){\n      var videoID = readData.match(/(?:https?:\\/{2})?(?:w{3}\\.)?youtu(?:be)?\\.(?:com|be)(?:\\/watch\\?v=|\\/)([^\\s&]+)/);\n      if(videoID != null) {\n        const playerStyle = {\n          display: \"block\",\n        }\n        this.setState({\n          videoID: videoID[1],\n          playerStyle: playerStyle,\n        });\n        window.alert(\"URL이 업데이트 되었습니다\");\n      } else { \n        window.alert(\"유효하지 않은 URL입니다.\");\n      }\n    }\n    else if(readData === \"refresh\"){\n      this.setState({\n        chatValue: \"\",\n        chatThreadValue: \"\",\n        chatThreadIndex: null,\n        chatThreadList: [],\n        chat2DList: [],\n        chat1DList: [],\n        remove: 0,\n        scrollIndex: \"o\",\n        isBreakTime: false,\n        commandValue: \"\",\n        videoID: \"\",\n        playerStyle: {display: \"none\"},\n        classTitle: \"1학년 1반\",\n        isPlayerRendered: false,\n        userName: \"\",\n        isLogin: false,\n      })\n    }\n  }\n\n  chat1DdoChange (e) {\n    const newValue = e.target.value;\n    this.setState({chatValue: newValue});\n  }\n\n  chat1DdoSubmit (e) {\n    const chat2DList = this.state.chat2DList;\n    const chatValue = this.state.chatValue;\n    if(chatValue[0] === '!'){\n      /* Chat1D로 가야함 */\n      const chat1DList = this.state.chat1DList;\n      const today = new Date();\n      var sec = today.getSeconds();\n      var min = today.getMinutes();\n      var hr = today.getHours();\n      if(sec< 10){\n        sec = \"0\"+sec;\n      }\n      if(min< 10){\n        min = \"0\"+min;\n      }\n      if(hr< 10){\n        hr = \"0\"+hr;\n      }\n      const time = today.getHours()+\":\"+min+\":\"+sec;\n      const newItem = {\n        time: time,\n        writer: this.state.userName,\n        chatValue: chatValue.slice(1, chatValue.length),\n        chatThreadList: [],\n      }\n      if(chat1DList.empty){\n        this.setState({\n          chat1DList: [newItem],\n        });\n      }\n      else{\n        this.setState({\n          chat1DList: chat1DList.concat(newItem),\n        });\n      }\n      this.setState({\n        scrollIndex: \"o\",\n      })\n    }\n    else{\n      if(chatValue) {\n          const popupX = 69 + Math.random() * (31-15);\n          const popupY = 11 + Math.random() * 48;\n          const popupStyle = {\n            left: popupX +\"vw\",\n            top: popupY + \"vh\",\n            width: 40+chatValue.length*15+\"px\",\n          };\n          const newItem = {\n            popupStyle: popupStyle,\n            writer: this.state.userName,\n            chatValue: chatValue,\n          };\n          if(!chat2DList){\n            const newList = [newItem];\n            this.setState({\n              chat2DList: newList,\n            });\n          }\n          else{\n            this.setState({\n              chat2DList: chat2DList.concat(newItem),\n            });\n          }\n          setTimeout( () => {\n            this.setState( prevState => ({\n              remove: prevState.remove + 1\n            }));\n          }, 4000);\n        }\n        this.setState({\n          scrollIndex: \"0\",\n        })\n      }\n    this.setState({\n      chatValue: \"\",\n    });\n    e.preventDefault();\n  }\n\n  chatThreadHandleClick(flag, i) {\n    if(flag ==='o'){\n      /* Click event from chat1D */\n        // 1. Update thread information in state\n      const chat = this.state.chat1DList[i];\n      const chatThreadList = chat.chatThreadList;\n      this.setState({\n        chatThreadIndex: i,\n        chatThreadList: chatThreadList,\n        scrollIndex: \"t\",\n      });\n    }\n  }\n\n  chatThreadDoChange (e) {\n    const newValue = e.target.value;\n    this.setState({chatThreadValue: newValue});\n  }\n\n\n  chatThreadDoSubmit(e){\n    const chatThreadIndex = this.state.chatThreadIndex;\n    const chatThreadValue = this.state.chatThreadValue;\n    if ((chatThreadIndex!==null) && chatThreadValue){\n      const chatThreadList = this.state.chatThreadList;\n      var newChat1DList = this.state.chat1DList.slice();\n        // 1. Get current time\n      const today = new Date();\n      var sec = today.getSeconds();\n      var min = today.getMinutes();\n      var hr = today.getHours();\n      if(sec< 10){\n        sec = \"0\"+sec;\n      }\n      if(min< 10){\n        min = \"0\"+min;\n      }\n      if(hr< 10){\n        hr = \"0\"+hr;\n      }\n      const time = today.getHours()+\":\"+min+\":\"+sec;\n        // 2. Make new item for thread chat list\n      const newThreadChat = {\n        time: time,\n        writer: this.state.userName,\n        chatValue: chatThreadValue,\n      }\n      if (chatThreadList){\n        // thread chat list is not empty\n        newChat1DList[chatThreadIndex].chatThreadList = newChat1DList[chatThreadIndex].chatThreadList.concat(newThreadChat);\n        this.setState({\n          chat1DList: newChat1DList,\n          chatThreadList: chatThreadList.concat(newThreadChat),\n          chatThreadValue: \"\",\n        });\n      }\n      else {\n        newChat1DList[chatThreadIndex].chatThreadList = [newThreadChat];\n        this.setState({\n          chat1DList: newChat1DList,\n          chatThreadList: [newThreadChat],\n          chatThreadValue: \"\",\n        });\n      }\n    }\n    this.setState({\n      chatThreadValue: \"\",\n      scrollIndex: \"t\",\n    })\n    e.preventDefault();\n  }\n\n  componentDidUpdate(){\n    const chat2DList = this.state.chat2DList;\n    const remove = this.state.remove;\n    if(remove !== 0) {\n      this.setState({\n        chat2DList: chat2DList.slice(1,chat2DList.length),\n        remove: remove - 1,\n      });\n    }\n  }\n\n  scrollToBottom(flag, someRef) {\n    if(someRef){\n      if(this.state.scrollIndex === flag){\n        someRef.scrollIntoView({behavior: \"smooth\"});\n      }\n    }\n  }\n\n\n  commandDoChange (e) {\n    const newValue = e.target.value;\n    this.setState({commandValue: newValue});\n  }\n\n  commandDoSubmit(e){\n    this.handleReadData(this.state.commandValue);\n    this.setState({\n      commandValue: \"\",\n    })\n    e.preventDefault();\n  }\n\n  loginDoChange (e) {\n    const newValue = e.target.value;\n    this.setState({userName: newValue});\n  }\n\n  loginDoSubmit(e) {\n    if(this.state.userName===\"\"){\n      window.alert(\"유효하지 않은 이름입니다\");\n    }\n    else{\n      this.setState({\n        isLogin: true,\n      });\n    }\n    e.preventDefault();\n  }\n  render() {\n    const chat1DdoSubmit = (e) => this.chat1DdoSubmit(e);\n    const chat1DdoChange = (e) => this.chat1DdoChange(e);\n    const chatThreadDoSubmit = (e) => this.chatThreadDoSubmit(e);\n    const chatThreadDoChange = (e) => this.chatThreadDoChange(e);\n    const commandDoChange = (e) => this.commandDoChange(e);\n    const commandDoSubmit = (e) => this.commandDoSubmit(e);\n    const loginDoSubmit = (e) => this.loginDoSubmit(e);\n    const loginDoChange = (e) => this.loginDoChange(e);\n\n    if(!this.state.isLogin){\n      return (\n        <div className=\"App\">\n          <div className=\"App-loginTitle\">온라인 웹 교실</div>\n          <span className=\"App-loginInput\">\n            <form onSubmit={loginDoSubmit}>\n              <input type= \"text\" \n                  className=\"App-loginInputBox\" \n                  value={this.state.userName} \n                  onChange={loginDoChange}\n                  placeholder=\"이름을 입력해주세요\"/>\n            </form>\n          </span>\n        </div>\n      )\n    }\n    return (\n    <div className=\"App\">\n      <span className=\"App-clock\">\n        <Clock />\n      </span>\n      <span className=\"App-classTitle\">\n        {this.state.classTitle}\n      </span>\n      <span className=\"App-Command\">\n        <form onSubmit={commandDoSubmit}>\n          <input type= \"text\" \n              className=\"AppCommandInput\" \n              value={this.state.commandValue} \n              onChange={commandDoChange}\n              placeholder=\"명령을 입력해주세요\"/>\n        </form>\n      </span>\n      <div className=\"App-Blackboard\">\n        <Blackboard />\n      </div>\n      <div className=\"App-content\">\n        <Content videoID = {this.state.videoID} playerStyle={this.state.playerStyle}/>\n      </div>\n      <div className=\"App-ChatThread\">\n        <ChatThread chatList={this.state.chatThreadList}\n                    chatTopic={this.state.chat1DList[this.state.chatThreadIndex]}\n                    scrollToBottom={(flag, ref) => this.scrollToBottom(flag, ref)}/>\n      </div>\n      <div className=\"App-Chat2D\">\n        <Chat2D chatList={this.state.chat2DList}/>\n      </div>\n      <div className=\"App-Chat1D\">\n        <Chat1D chatList={this.state.chat1DList}\n                chatThreadHandleClick={(flag,i) => this.chatThreadHandleClick(flag,i)}\n                scrollToBottom={(flag, ref) => this.scrollToBottom(flag, ref)}/>\n      </div>\n      <div className=\"App-ChatInput\">\n        <form onSubmit={chat1DdoSubmit}>\n          <input type= \"text\" \n                className=\"chatInput\" \n                value={this.state.chatValue} \n                onChange={chat1DdoChange}\n                placeholder=\"채팅을 입력해주세요\"/>\n        </form>\n      </div>\n      <div className=\"App-ChatThreadInput\">\n        <form onSubmit={chatThreadDoSubmit}>\n          <input type= \"text\" \n              className=\"chatThreadInput\" \n              value={this.state.chatThreadValue} \n              onChange={chatThreadDoChange}\n              placeholder=\"채팅을 입력해주세요\"/>\n        </form>\n      </div>\n    </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}