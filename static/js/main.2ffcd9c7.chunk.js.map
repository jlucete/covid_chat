{"version":3,"sources":["Chat1D.js","Chat2D.js","Blackboard.js","ChatThread.js","Content.js","Clock.js","App.js","index.js"],"names":["Chat1D","chatHistory","this","props","chatList","map","chat","i","key","className","onClick","chatThreadHandleClick","time","writer","chatValue","style","float","clear","ref","el","scrollToBottom","Component","Chat2D","popups","popupStyle","Blackboard","state","notice","inputBoxDisplay","setState","e","newValue","target","value","inputBoxStyle","display","blackboardDoFix","blackboardDoSubmit","onChange","blackboardDoChange","ChatThread","chatTopic","Content","Clock","Change","d","Date","timeID","setInterval","clearInterval","n","currentDate","date","getFullYear","getMonth","getDate","getDay","amPm","currentHours","addZeros","getHours","currentMinute","getMinutes","currentSeconds","getSeconds","color","App","handleKeyPress","charCode","isBreakTime","window","alert","chatThreadValue","chatThreadIndex","chatThreadList","chat2DList","chat1DList","remove","scrollIndex","today","sec","min","hr","newItem","slice","length","empty","concat","zIndex","position","left","Math","random","top","border","width","maxWidth","text_align","verticalAlign","background","newList","setTimeout","prevState","preventDefault","flag","newChat1DList","newThreadChat","someRef","scrollIntoView","behavior","onSubmit","chat1DdoSubmit","type","chat1DdoChange","placeholder","chatThreadDoSubmit","chatThreadDoChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ffcd9c7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Chat1D.css';\r\n\r\nclass Chat1D extends Component {\r\n  render() {\r\n    const chatList = this.props.chatList;\r\n    const chatHistory = chatList.map(\r\n      (chat, i) => (\r\n        <div key = {i} className=\"Chat1D-single\" onClick={()=>(this.props.chatThreadHandleClick(\"o\",i))}>[{chat.time}] {chat.writer} : {chat.chatValue}</div>\r\n      )\r\n    );\r\n    return (\r\n      <div className=\"Chat1D-layout\">\r\n        <div className=\"Chat1D-title\">1D 채팅방</div>\r\n        <div className=\"Chat1D-container\">\r\n          <div className=\"Chat1D-chatList\">\r\n            {chatHistory}\r\n          </div>\r\n          <div style={{ float:\"left\", clear:\"both\"}}\r\n               ref={(el) => { this.props.scrollToBottom(\"o\", el);}}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chat1D;","import React, { Component } from 'react';\r\nimport './Chat2D.css';\r\n\r\n\r\nclass Chat2D extends Component {\r\n\r\n  render() {\r\n    const chatList = this.props.chatList;\r\n    const popups = chatList.map(\r\n      (chat, i) => (\r\n        <div key = {i} style={chat.popupStyle}>{chat.writer} : {chat.chatValue}</div>\r\n      )\r\n    );\r\n    return (\r\n      <div>\r\n        {popups}\r\n        <div className=\"Chat2D-layout\">\r\n          <div className=\"Chat2D-title\">2D채팅방</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chat2D;","import React, { Component } from 'react';\r\nimport './Blackboard.css';\r\n\r\nclass Blackboard extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      notice : \"\",\r\n      inputBoxDisplay: \"none\",\r\n    };\r\n  }\r\n  blackboardDoFix() {\r\n    this.setState({\r\n      inputBoxDisplay: \"block\",\r\n    });\r\n  }\r\n  blackboardDoSubmit() {\r\n    this.setState({\r\n      inputBoxDisplay: \"none\",\r\n    })\r\n  }\r\n  blackboardDoChange (e) {\r\n    const newValue = e.target.value;\r\n    this.setState({notice: newValue});\r\n  }\r\n  render() {\r\n    const blackboardDoChange = (e) => this.blackboardDoChange(e);\r\n    const inputBoxStyle = {\r\n      display: this.state.inputBoxDisplay,\r\n    }\r\n    return (\r\n      <div className=\"Blackboard-layout\">\r\n        <div className=\"Blackboard-title\" >공지사항</div>\r\n        <button className=\"Blackboard-fixButton\" onClick={()=>(this.blackboardDoFix())}>수정</button>\r\n        <button className=\"Blackboard-updateButton\" onClick={()=>(this.blackboardDoSubmit())}>적용</button>\r\n        <pre className=\"Blackboard-notice\">{this.state.notice}</pre>\r\n        <textarea\r\n            className=\"Blackboard-inputBox\" \r\n            value={this.state.notice}\r\n            onChange={blackboardDoChange}\r\n            style={inputBoxStyle}\r\n            />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Blackboard;","import React, { Component } from 'react';\r\nimport './ChatThread.css';\r\n\r\nclass ChatThread extends Component {\r\n  render() {\r\n    const chatList = this.props.chatList;\r\n    const chatTopic = (this.props.chatTopic ? \r\n                      <div className=\"ChatThread-topic\">{this.props.chatTopic.writer} : {this.props.chatTopic.chatValue}</div> :\r\n                      <div></div>);\r\n    const chatHistory = chatList.map(\r\n      (chat, i) => (\r\n        <div key = {i} className=\"ChatThread-single\" >[{chat.time}] {chat.writer} : {chat.chatValue}</div>\r\n      )\r\n    );\r\n    return (\r\n      <div className=\"ChatThread-layout\">\r\n        <div className=\"ChatThread-title\">쓰레드 채팅방</div>\r\n        {chatTopic}\r\n        <div className=\"ChatThread-container\">\r\n          <div className=\"ChatThread-chatList\">\r\n            {chatHistory}\r\n          </div>\r\n          <div style={{ float:\"left\", clear:\"both\"}}\r\n               ref={(el) => { this.props.scrollToBottom(\"t\", el);}}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChatThread;","import React, { Component } from 'react';\r\nimport './Content.css';\r\n\r\n\r\nclass Content extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Content-layout\">\r\n        <div className=\"Content-title\">수업 컨텐츠</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Content;","import React, { Component } from 'react';\r\nimport './Clock.css';\r\n\r\n\r\nclass Clock extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {d: new Date()}\r\n    }\r\n    componentDidMount() {\r\n        this.timeID = setInterval(\r\n            () => this.Change(),\r\n            1000\r\n        )\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.timeID)\r\n    }\r\n    Change = () => {\r\n        this.setState({\r\n            d : new Date(),\r\n        })\r\n    }\r\n\r\n    addZeros(n) {\r\n      if(n < 10) {\r\n        return \"0\"+n;\r\n      }\r\n      return n;\r\n    }\r\n    render() {\r\n      const currentDate = this.state.d;\r\n      const week = [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"];\r\n      var date = currentDate.getFullYear()+'/'+currentDate.getMonth()+'/'+currentDate.getDate()+\" \"+week[currentDate.getDay()];\r\n      var amPm = ' AM'; // 초기값 AM\r\n      var currentHours = this.addZeros(currentDate.getHours()); \r\n      var currentMinute = this.addZeros(currentDate.getMinutes());\r\n      var currentSeconds = this.addZeros(currentDate.getSeconds());\r\n      \r\n      if(currentHours >= 12){ // 시간이 12보다 클 때 PM으로 세팅, 12를 빼줌\r\n        amPm = ' PM';\r\n        currentHours = this.addZeros(currentHours - 12);\r\n      }\r\n  \r\n      if(currentSeconds >= 50){// 50초 이상일 때 색을 변환해 준다.\r\n         currentSeconds = <span color=\"#de1951\">{currentSeconds}</span>;\r\n      }\r\n      return(\r\n          <div className =\"Clock-layout\">\r\n            <div className=\"Clock-date\">{date}</div>\r\n            <span className=\"Clock-time\">\r\n              {currentHours}:{currentMinute}:{currentSeconds}\r\n              <span className=\"Clock-ampm\">{amPm}</span>\r\n            </span>\r\n            \r\n\r\n          </div>)\r\n    }\r\n}\r\n\r\nexport default Clock;","import React, { Component } from 'react';\nimport './App.css';\nimport Chat1D from './Chat1D'\nimport Chat2D from './Chat2D'\nimport Blackboard from './Blackboard'\nimport ChatThread from './ChatThread'\nimport Content from './Content'\nimport Clock from './Clock'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatValue: \"\",\n      chatThreadValue: \"\",\n      chatThreadIndex: null,\n      chatThreadList: [],\n      chat2DList: [],\n      chat1DList: [],\n      remove: 0,\n      scrollIndex: \"o\",\n      isBreakTime: false,\n    };\n  }\n\n  handleKeyPress = (e) => {\n    if(e.charCode === \"b\"){\n      this.setState({\n        isBreakTime: !this.state.isBreakTime,\n      });\n      if(this.state.isBreakTime) {\n        window.alert(\"쉬는 시간이에요!\");\n      }\n      else{\n        window.alert(\"수업 시간입니다.\");\n      }\n    }\n  }\n\n\n  chat1DdoChange (e) {\n    const newValue = e.target.value;\n    this.setState({chatValue: newValue});\n  }\n\n  chat1DdoSubmit (e) {\n    const chat2DList = this.state.chat2DList;\n    const chatValue = this.state.chatValue;\n    if(chatValue[0] === '!'){\n      /* Chat1D로 가야함 */\n      const chat1DList = this.state.chat1DList;\n      const today = new Date();\n      var sec = today.getSeconds();\n      var min = today.getMinutes();\n      var hr = today.getHours();\n      if(sec< 10){\n        sec = \"0\"+sec;\n      }\n      if(min< 10){\n        min = \"0\"+min;\n      }\n      if(hr< 10){\n        hr = \"0\"+hr;\n      }\n      const time = today.getHours()+\":\"+min+\":\"+sec;\n      const newItem = {\n        time: time,\n        writer: '나',\n        chatValue: chatValue.slice(1, chatValue.length),\n        chatThreadList: [],\n      }\n      if(chat1DList.empty){\n        this.setState({\n          chat1DList: [newItem],\n        });\n      }\n      else{\n        this.setState({\n          chat1DList: chat1DList.concat(newItem),\n        });\n      }\n      this.setState({\n        scrollIndex: \"o\",\n      })\n    }\n    else{\n      if(chatValue) {\n          const popupX = 69 + Math.random() * (31-15);\n          const popupY = 2 + Math.random() * 58;\n          const popupStyle = {\n            zIndex: '1',\n            position: \"absolute\",\n            left: popupX +\"vw\",\n            top: popupY + \"vh\",\n            border: \"1px solid\",\n            width: 40+chatValue.length*15+\"px\",\n            maxWidth: \"15vw\",\n            text_align: 'center',\n            verticalAlign: 'middle',\n            background: \"white\",\n          };\n          const newItem = {\n            popupStyle: popupStyle,\n            writer: '나',\n            chatValue: chatValue,\n          };\n          if(!chat2DList){\n            const newList = [newItem];\n            this.setState({\n              chat2DList: newList,\n            });\n          }\n          else{\n            this.setState({\n              chat2DList: chat2DList.concat(newItem),\n            });\n          }\n          setTimeout( () => {\n            this.setState( prevState => ({\n              remove: prevState.remove + 1\n            }));\n          }, 4000);\n        }\n        this.setState({\n          scrollIndex: \"0\",\n        })\n      }\n    this.setState({\n      chatValue: \"\",\n    });\n    e.preventDefault();\n  }\n\n  chatThreadHandleClick(flag, i) {\n    if(flag ==='o'){\n      /* Click event from chat1D */\n        // 1. Update thread information in state\n      const chat = this.state.chat1DList[i];\n      const chatThreadList = chat.chatThreadList;\n      this.setState({\n        chatThreadIndex: i,\n        chatThreadList: chatThreadList,\n        scrollIndex: \"t\",\n      });\n    }\n  }\n\n  chatThreadDoChange (e) {\n    const newValue = e.target.value;\n    this.setState({chatThreadValue: newValue});\n  }\n\n  chatThreadDoSubmit(e){\n    const chatThreadIndex = this.state.chatThreadIndex;\n    const chatThreadValue = this.state.chatThreadValue;\n    if ((chatThreadIndex!==null) && chatThreadValue){\n      const chatThreadList = this.state.chatThreadList;\n      var newChat1DList = this.state.chat1DList.slice();\n        // 1. Get current time\n      const today = new Date();\n      var sec = today.getSeconds();\n      var min = today.getMinutes();\n      var hr = today.getHours();\n      if(sec< 10){\n        sec = \"0\"+sec;\n      }\n      if(min< 10){\n        min = \"0\"+min;\n      }\n      if(hr< 10){\n        hr = \"0\"+hr;\n      }\n      const time = today.getHours()+\":\"+min+\":\"+sec;\n        // 2. Make new item for thread chat list\n      const newThreadChat = {\n        time: time,\n        writer: '나',\n        chatValue: chatThreadValue,\n      }\n      if (chatThreadList){\n        // thread chat list is not empty\n        newChat1DList[chatThreadIndex].chatThreadList = newChat1DList[chatThreadIndex].chatThreadList.concat(newThreadChat);\n        this.setState({\n          chat1DList: newChat1DList,\n          chatThreadList: chatThreadList.concat(newThreadChat),\n          chatThreadValue: \"\",\n        });\n      }\n      else {\n        newChat1DList[chatThreadIndex].chatThreadList = [newThreadChat];\n        this.setState({\n          chat1DList: newChat1DList,\n          chatThreadList: [newThreadChat],\n          chatThreadValue: \"\",\n        });\n      }\n    }\n    this.setState({\n      chatThreadValue: \"\",\n      scrollIndex: \"t\",\n    })\n    e.preventDefault();\n  }\n\n  componentDidUpdate(){\n    const chat2DList = this.state.chat2DList;\n    const remove = this.state.remove;\n    if(remove !== 0) {\n      this.setState({\n        chat2DList: chat2DList.slice(1,chat2DList.length),\n        remove: remove - 1,\n      });\n    }\n  }\n\n  scrollToBottom(flag, someRef) {\n    if(someRef){\n      if(this.state.scrollIndex === flag){\n        someRef.scrollIntoView({behavior: \"smooth\"});\n      }\n    }\n  }\n\n  render() {\n    const chat1DdoSubmit = (e) => this.chat1DdoSubmit(e);\n    const chat1DdoChange = (e) => this.chat1DdoChange(e);\n    const chatThreadDoSubmit = (e) => this.chatThreadDoSubmit(e);\n    const chatThreadDoChange = (e) => this.chatThreadDoChange(e);\n\n    return (\n    <div className=\"App\">\n      <div className=\"App-clock\">\n        <Clock />\n      </div>\n      <div className=\"App-Blackboard\">\n        <Blackboard />\n      </div>\n      <div className=\"App-content\">\n        <Content />\n      </div>\n      <div className=\"App-ChatThread\">\n        <ChatThread chatList={this.state.chatThreadList}\n                    chatTopic={this.state.chat1DList[this.state.chatThreadIndex]}\n                    scrollToBottom={(flag, ref) => this.scrollToBottom(flag, ref)}/>\n      </div>\n      <div className=\"App-Chat2D\">\n        <Chat2D chatList={this.state.chat2DList}/>\n      </div>\n      <div className=\"App-Chat1D\">\n        <Chat1D chatList={this.state.chat1DList}\n                chatThreadHandleClick={(flag,i) => this.chatThreadHandleClick(flag,i)}\n                scrollToBottom={(flag, ref) => this.scrollToBottom(flag, ref)}/>\n      </div>\n      <div className=\"App-ChatInput\">\n        <form onSubmit={chat1DdoSubmit}>\n          <input type= \"text\" \n                className=\"chatInput\" \n                value={this.state.chatValue} \n                onChange={chat1DdoChange}\n                placeholder=\"채팅을 입력해주세요\"/>\n        </form>\n      </div>\n      <div className=\"App-ChatThreadInput\">\n        <form onSubmit={chatThreadDoSubmit}>\n          <input type= \"text\" \n              className=\"chatThreadInput\" \n              value={this.state.chatThreadValue} \n              onChange={chatThreadDoChange}\n              placeholder=\"채팅을 입력해주세요\"/>\n        </form>\n      </div>\n    </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}